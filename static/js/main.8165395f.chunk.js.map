{"version":3,"sources":["components/styles.js","components/App.js","components/Post.js","serviceWorker.js","index.js"],"names":["Title","styled","h1","Menu","div","Camisa","button","Bone","Oculos","Blusa","Calca","Tenis","Mochila","Luva","Acessorio","Area","Html","html","addTitulo","titulo","document","getElementById","innerHTML","window","onload","click","App","id","onClick","React","Component","Boolean","location","hostname","match","ReactDOM","render","path","component","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"64GAKO,IAAMA,EAAQC,IAAOC,GAAV,KAMLC,EAAOF,IAAOG,IAAV,KAWJC,EAASJ,IAAOK,OAAV,KAoCNC,EAAON,YAAOI,EAAPJ,CAAH,KAWJO,EAASP,YAAOI,EAAPJ,CAAH,KAMNQ,EAAQR,YAAOI,EAAPJ,CAAH,KAMLS,EAAQT,YAAOI,EAAPJ,CAAH,KAMLU,EAAQV,YAAOI,EAAPJ,CAAH,KAOLW,EAAUX,YAAOI,EAAPJ,CAAH,KAOPY,EAAOZ,YAAOI,EAAPJ,CAAH,KAQJa,EAAYb,YAAOI,EAAPJ,CAAH,KAOTc,EAAOd,IAAOG,IAAV,KAUJY,EAAOf,IAAOgB,KAAV,KCnHjB,SAASC,EAAUC,GACjBC,SAASC,eAAe,UAAUC,UAAYH,EAJhDI,OAAOC,OAAS,WACdJ,SAASC,eAAe,QAAQI,S,IASbC,E,uKAGjB,OAAQ,kBAACV,EAAD,KAIN,kBAACb,EAAD,KAIE,kBAACI,EAAD,CAAMoB,GAAG,OAAOC,QAAS,WAAQV,EAAU,eAQ3C,kBAACV,EAAD,CAAQoB,QAAS,WAAQV,EAAU,YAAnC,KACA,kBAACT,EAAD,CAAOmB,QAAS,WAAQV,EAAU,YAAlC,KACA,kBAACR,EAAD,CAAOkB,QAAS,WAAQV,EAAU,gBAClC,kBAACP,EAAD,CAAOiB,QAAS,WAAQV,EAAU,WAAlC,QACA,kBAACN,EAAD,CAASgB,QAAS,WAAQV,EAAU,eACpC,kBAACL,EAAD,CAAMe,QAAS,WAAQV,EAAU,YACjC,kBAACJ,EAAD,CAAWc,QAAS,WAAQV,EAAU,eACtC,kBAACb,EAAD,CAAQsB,GAAG,OAAOC,QAAS,WAAQV,EAAU,eAA7C,KAEA,kBAACH,EAAD,KACE,kBAACf,EAAD,UAAU,uBAAG2B,GAAG,WAAhB,KACA,oC,GA9BuBE,IAAMC,W,GCfLD,IAAMC,U,cCSpBC,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWZ,KAK3BN,SAASC,eAAe,SDmHpB,kBAAmBkB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8165395f.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\n\r\n\r\n\r\nexport const Title = styled.h1`\r\n    color: white;\r\n    text-align:center;\r\n    font-family:monospace;\r\n    font-size:23px;\r\n`;\r\nexport const Menu = styled.div`\r\n    max-width:500px;\r\n    display:grid;\r\n    grid-gap:1px; \r\n    grid-column-gap:0px;\r\n    grid-template-columns:fit-content(100%);\r\n    grid-row-gap:3px;\r\n    padding:0;\r\n    margin:0;\r\n`;\r\n   \r\nexport const Camisa = styled.button`\r\n    border-radius: 5px;\r\n    outline: none;\r\n    background-size:90% 100%;\r\n    background-position:center;\r\n    \r\n    background-image:url('https://image.flaticon.com/icons/svg/1867/1867631.svg');\r\n    \r\n    background-color:rgba(190, 190, 190, 0.2);\r\n    background-color:#fff;\r\n    opacity:60%;\r\n\r\n    filter: invert(1);\r\n    border: none;\r\n    background-repeat:no-repeat;\r\n    width:50px;\r\n    height:50px;\r\n    grid-column:1;\r\n    grid-row:4;\r\n    margin:2.4px;\r\n    margin-top:-2px;\r\n    :hover{\r\n        \r\n     \r\n\r\n        \r\n        opacity:50%;\r\n        filter: invert(1);\r\n        border-style:solid;\r\n        border-width:0.2px;\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Bone = styled(Camisa)`\r\n\r\n    background-image:url('https://image.flaticon.com/icons/svg/2965/2965305.svg');\r\n    grid-column:1;\r\n    outline:none;\r\n    grid-row:1;\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Oculos = styled(Camisa)`\r\n   \r\n   background-image:url('https://image.flaticon.com/icons/svg/3226/3226530.svg');\r\n    grid-column:1;\r\n    grid-row:2;\r\n`;\r\nexport const Blusa = styled(Camisa)`\r\n    background-image:url('https://image.flaticon.com/icons/svg/2784/2784554.svg');\r\n\r\n    grid-column:1;\r\n    grid-row:5;\r\n`;\r\nexport const Calca = styled(Camisa)`\r\n\r\n    background-image:url('https://image.flaticon.com/icons/svg/2793/2793953.svg');\r\n    grid-column:1;\r\n    grid-row:6;\r\n`;\r\nexport const Tenis = styled(Camisa)`\r\n    background-image:url('https://image.flaticon.com/icons/svg/933/933635.svg');\r\n    grid-column:1;\r\n    grid-row:7;\r\n\r\n\r\n`;\r\nexport const Mochila = styled(Camisa)`\r\n    grid-column:1;\r\n    grid-row:8;\r\n    background-image:url('https://image.flaticon.com/icons/svg/3113/3113282.svg');\r\n\r\n\r\n`;\r\nexport const Luva = styled(Camisa)`\r\n   \r\n    background-image:url('https://image.flaticon.com/icons/svg/3165/3165150.svg');\r\n    grid-column:1;\r\n    grid-row:9;\r\n\r\n\r\n`;\r\nexport const Acessorio = styled(Camisa)`\r\n   background-image:url('https://image.flaticon.com/icons/svg/3190/3190948.svg');\r\n    grid-column:1;\r\n    grid-row:3;\r\n\r\n\r\n`;\r\nexport const Area = styled.div`\r\n    background-color:#000;\r\n    opacity:60%;\r\n     border-radius: 12px;\r\n    grid-column:2;\r\n    margin:2px;\r\n    \r\n    grid-row-start:1;\r\n    grid-row-end:10;\r\n`;\r\nexport const Html = styled.html`\r\nbackground-image:url('https://cdn.discordapp.com/attachments/730503617290698838/739632536036180090/unknown.png');\r\nbackground-size:90%;\r\nbackground-repeat:no-repeat;\r\nwidth:100%;\r\nheight:700px;\r\nmargin:0;\r\npadding:0;\r\n\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Camisa, Bone, Oculos, Blusa, Calca, Tenis, Mochila, Luva, Acessorio } from \"./styles\";//icones\r\nimport { Area, Title, Menu, Html } from \"./styles\";//componentes\r\n\r\n\r\n\r\n\r\nwindow.onload = () => {\r\n  document.getElementById('bone').click();\r\n};\r\nfunction addTitulo(titulo) {\r\n  document.getElementById(\"titulo\").innerHTML = titulo;\r\n\r\n}\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n  render() {\r\n    return (<Html >\r\n\r\n\r\n\r\n      <Menu>\r\n\r\n\r\n\r\n        <Bone id=\"bone\" onClick={() => { addTitulo('Bonés') }}>\r\n        \r\n          </Bone>\r\n\r\n\r\n\r\n\r\n\r\n        <Oculos onClick={() => { addTitulo('Oculos') }}> </Oculos>\r\n        <Blusa onClick={() => { addTitulo('Blusas') }}> </Blusa>\r\n        <Calca onClick={() => { addTitulo('Calças') }}></Calca>\r\n        <Tenis onClick={() => { addTitulo('Tenis') }}>    </Tenis>\r\n        <Mochila onClick={() => { addTitulo('Mochilas') }}></Mochila>\r\n        <Luva onClick={() => { addTitulo('Luvas') }}></Luva>\r\n        <Acessorio onClick={() => { addTitulo('Mascaras') }}></Acessorio>\r\n        <Camisa id=\"cami\" onClick={() => { addTitulo('Camisetas') }}> </Camisa>\r\n\r\n        <Area>\r\n          <Title >  <p id=\"titulo\">{}</p> </Title>\r\n          <hr />\r\n\r\n        </Area>\r\n\r\n      </Menu>\r\n\r\n\r\n\r\n    </Html>)\r\n\r\n\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport default class Post extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <button> {this.props.id}</button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from './components/App';\nimport Post from './components/Post';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <Route path=\"/\" component={App}/> \n   \n  \n  \n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}